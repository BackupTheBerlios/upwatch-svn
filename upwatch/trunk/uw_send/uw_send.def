AutoGen Definitions options;
export        = "#define progOptions uw_sendOptions";
prog-name     = uw_send;
prog-title    = "Upwatch parallel probe daemon";
version       = `cat ../VERSION`;
homerc        = "/etc/upwatch.conf";
homerc        = "/etc/upwatch.d/uw_send.conf";
homerc        = "$HOME/.upwatchrc";
homerc        = "$HOME";
homerc        = "$$/upwatch.conf";
homerc        = "$$/uw_send.conf";
detail        = 
'uw_send sends all files in the queue to a central server using 
the uw_send protocol. This is a very simple protocol and looks
something like POP3.';

// this section is for the generated specfile
spec-requires = "glib2";
spec-install  = "mkdir -p $RPM_BUILD_ROOT/var/spool/upwatch/uw_send/tmp";
spec-install  = "mkdir -p $RPM_BUILD_ROOT/var/spool/upwatch/uw_send/new";
spec-files    = "%attr(0770,root,upwatch) %dir /var/spool/upwatch/uw_send/new";
spec-files    = "%attr(0770,root,upwatch) %dir /var/spool/upwatch/uw_send/tmp";
spec-files    = "%attr(0770,root,upwatch) /usr/sbin/uw_send";

flag = {
    name      = spooldir;
    value     = S;
    arg_type  = string;
    arg_default = '/var/spool/upwatch';
    descrip   = "maildir-type spooldirectory for result files";
    doc       =
'Probes generates files with data. These are put in maildir style
spooldirectories. This parameter denotes the basedirectory. 
For some more info about maildir see http://www.qmail.org/man/man5/maildir.html.';
};

// describe commandline flags
flag = {
    name      = once;
    value     = 1;        /* flag style option character */
    descrip   = "send once and then exit again";
    doc       =
'When you specify this flag, uw_send starts, sends all files in
the input spool, and then exits again';
};

flag = {
    name      = input;
    value     = I;
    stack_arg;
    arg_type  = string;
    descrip   = "name of queue to read from";
    doc       =
'The argument is taken to be a maildir under the directory `spooldir`.
Everything placed in this queue is transferred. More then one queue may
be given, and these will be matched with corresponding 
host/port/uwuser/uwpasswd arguments, so the second queue given will be
uploaded to the second host given etcetera. Special behaviour in case
of overriding values: set hostname to `none` to delete an earlier
defined input queue.';
};

flag = {
    name      = threads;
    value     = t;
    stack_arg;
    arg_type  = string;
    descrip   = "number of threads per queue";
    doc       =
'Number of threads for each queue. Setting to one is probably best.';
};

flag = {
    name      = host;
    value     = h;        /* flag style option character */
    stack_arg;
    arg_type  = string;   /* option argument indication  */
    descrip   = "Host to send data to";
    doc       =
'This option denotes the internet hostname where the queue files should be uploaded.
By default it connects to port 1985, but this can be changed using the --port option.
This hostname should be DNS resolvable of course, but an IP address may be specified.
Setting hostname to none results in deleting an earlier defined input queue definition';
};

flag = {
    name      = port;
    value     = p;        /* flag style option character */
    stack_arg;
    arg_type  = string;   /* option argument indication  */
    descrip   = "port to connect to";
    doc       = 
'Portnumber on the host to connect to, where to upload queue files';
};

flag = {
    name      = uwuser;
    value     = U;        /* flag style option character */
    stack_arg;
    arg_type  = string;   /* option argument indication  */
    descrip   = "Upwatch username";
    doc       = 
'Username for the host to connect to, where to upload queue files';
};

flag = {
    name      = uwpasswd;
    value     = P;        /* flag style option character */
    stack_arg;
    arg_type  = string;   /* option argument indication  */
    descrip   = "UpWatch password";
    doc       = 
'Password for the host to connect to, where to upload queue files';
};

flag = {
    name      = dialscript;
    value     = D;
    arg_type  = string;
    descrip   = "Script to call to setup internet connection";
    doc       =
"In some environments you don't have network access. If this parameter
is present it is assumed to be the name of a script that sets up network
connection. The script is called if uw_send actually needs to send 
something";
};

flag = {
    name      = hangupscript;
    value     = H;
    arg_type  = string;
    descrip   = "Script to call to tear down internet connection";
    doc       =
'This script is called if uw_send is done sending data';
};

#include generic_options.def
