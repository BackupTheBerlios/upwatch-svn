/*   -*- buffer-read-only: t -*- vi: set ro:
 *  
 *  DO NOT EDIT THIS FILE   (bbhimport.h)
 *  
 *  It has been AutoGen-ed  Thursday January  8, 2004 at 01:07:15 AM CET
 *  From the definitions    bbhimport.def
 *  and the template file   options
 */
/*
 *  This file contains the programmatic interface to the Automated
 *  Options generated for the bbhimport program.
 *  These macros are documented in the AutoGen info file in the
 *  "AutoOpts" chapter.  Please refer to that doc for usage help.
 */
#ifndef AUTOOPTS_BBHIMPORT_H_GUARD
#define AUTOOPTS_BBHIMPORT_H_GUARD

/*
 * bbhimport copyright 2002 Upwatch BV - all rights reserved
 *
 * Redistribution Prohibited. Violation will be prosecuted to the maximum extent possible by applicable law.
 */
#include <options.h>

/*
 *  Enumeration of each option:
 */
typedef enum {
        INDEX_OPT_INPUT            =  0,
        INDEX_OPT_DBTYPE           =  1,
        INDEX_OPT_DBCOMPRESS       =  2,
        INDEX_OPT_DBHOST           =  3,
        INDEX_OPT_DBPORT           =  4,
        INDEX_OPT_DBNAME           =  5,
        INDEX_OPT_DBUSER           =  6,
        INDEX_OPT_DBPASSWD         =  7,
        INDEX_OPT_SERVER_TABLE_NAME =  8,
        INDEX_OPT_SERVER_TABLE_NAME_FIELD =  9,
        INDEX_OPT_SERVER_TABLE_ID_FIELD = 10,
        INDEX_OPT_SERVER_TABLE_COLOR_FIELD = 11,
        INDEX_OPT_SYSLOG           = 12,
        INDEX_OPT_STDERR           = 13,
        INDEX_OPT_DEBUG            = 14,
        INDEX_OPT_LOGFILE          = 15,
        INDEX_OPT_VERSION          = 16,
        INDEX_OPT_HELP             = 17,
        INDEX_OPT_MORE_HELP        = 18,
        INDEX_OPT_SAVE_OPTS        = 19,
        INDEX_OPT_LOAD_OPTS        = 20
} teOptIndex;

#define OPTION_CT    21
#define BBHIMPORT_VERSION       "0.8"
#define BBHIMPORT_FULL_VERSION  "bbhimport - Upwatch Big Brother import utility - Ver. 0.8"

/*
 *  Interface defines for all options.  Replace "n" with
 *  the UPPER_CASED option name (as in the teOptIndex
 *  enumeration above).  e.g. HAVE_OPT( INPUT )
 */
#ifdef __STDC__
#  define       DESC(n) bbhimportOptions.pOptDesc[INDEX_OPT_ ## n]
#else
#  define       DESC(n) bbhimportOptions.pOptDesc[INDEX_OPT_/**/n]
#endif
#define     HAVE_OPT(n) (! UNUSED_OPT(& DESC(n)))
#define      OPT_ARG(n) (DESC(n).pzLastArg)
#define    STATE_OPT(n) (DESC(n).fOptState & OPTST_SET_MASK)
#define    COUNT_OPT(n) (DESC(n).optOccCt)
#define    ISSEL_OPT(n) (SELECTED_OPT(&DESC(n)))
#define ISUNUSED_OPT(n) (UNUSED_OPT(& DESC(n)))
#define  ENABLED_OPT(n) (! DISABLED_OPT(& DESC(n)))
#define  STACKCT_OPT(n) (((tArgList*)(DESC(n).optCookie))->useCt)
#define STACKLST_OPT(n) (((tArgList*)(DESC(n).optCookie))->apzArgs)
#define    CLEAR_OPT(n) STMTS( \
                DESC(n).fOptState &= OPTST_PERSISTENT;   \
                if ( (DESC(n).fOptState & OPTST_INITENABLED) == 0) \
                    DESC(n).fOptState |= OPTST_DISABLED; \
                DESC(n).optCookie = NULL )

/*
 *  Interface defines for specific options.
 */
#define VALUE_OPT_INPUT          'I'
#define VALUE_OPT_DBTYPE         'T'
#define VALUE_OPT_DBCOMPRESS     'C'
#define OPT_VALUE_DBCOMPRESS     (*(long*)(&OPT_ARG(DBCOMPRESS)))
#define VALUE_OPT_DBHOST         'h'
#define VALUE_OPT_DBPORT         4
#define OPT_VALUE_DBPORT         (*(long*)(&OPT_ARG(DBPORT)))
#define VALUE_OPT_DBNAME         'n'
#define VALUE_OPT_DBUSER         'u'
#define VALUE_OPT_DBPASSWD       'p'
#define VALUE_OPT_SERVER_TABLE_NAME 8
#define VALUE_OPT_SERVER_TABLE_NAME_FIELD 9
#define VALUE_OPT_SERVER_TABLE_ID_FIELD 10
#define VALUE_OPT_SERVER_TABLE_COLOR_FIELD 11
#define VALUE_OPT_SYSLOG         's'
#define OPT_VALUE_SYSLOG         (*(ag_bool*)(&OPT_ARG(SYSLOG)))
#define VALUE_OPT_STDERR         'e'
#define OPT_VALUE_STDERR         (*(ag_bool*)(&OPT_ARG(STDERR)))
#define SET_OPT_STDERR(a)   STMTS( \
        DESC(STDERR).optActualIndex = 13; \
        DESC(STDERR).optActualValue = VALUE_OPT_STDERR; \
        DESC(STDERR).fOptState &= OPTST_PERSISTENT; \
        DESC(STDERR).fOptState |= OPTST_SET; \
        DESC(STDERR).pzLastArg  = (char*)(a); \
        (*(DESC(STDERR).pOptProc))( &bbhimportOptions, \
                bbhimportOptions.pOptDesc + 13 ) )
#define VALUE_OPT_DEBUG          'd'
#define OPT_VALUE_DEBUG          (*(long*)(&OPT_ARG(DEBUG)))
#define VALUE_OPT_LOGFILE        'l'

#define VALUE_OPT_VERSION        'v'
#define VALUE_OPT_SAVE_OPTS      '>'
#define VALUE_OPT_LOAD_OPTS      '<'
#define VALUE_OPT_HELP           '?'
#define VALUE_OPT_MORE_HELP      '!'
#define SET_OPT_SAVE_OPTS(a)   STMTS( \
        DESC(SAVE_OPTS).fOptState &= OPTST_PERSISTENT; \
        DESC(SAVE_OPTS).fOptState |= OPTST_SET; \
        DESC(SAVE_OPTS).pzLastArg  = (char*)(a) )

/*
 *  Interface defines not associated with particular options
 */
#define  ERRSKIP_OPTERR STMTS( bbhimportOptions.fOptSet &= ~OPTPROC_ERRSTOP )
#define  ERRSTOP_OPTERR STMTS( bbhimportOptions.fOptSet |= OPTPROC_ERRSTOP )
#define  RESTART_OPT(n) STMTS( \
                bbhimportOptions.curOptIdx = (n); \
                bbhimportOptions.pzCurOpt  = NULL )
#define    START_OPT    RESTART_OPT(1)
#define     USAGE(c)    (*bbhimportOptions.pUsageProc)( &bbhimportOptions, c )

/* * * * * *
 *
 *  Declare the bbhimport option descriptor.
 */
#ifdef  __cplusplus
extern "C" {
#endif

extern tOptions   bbhimportOptions;

/* * * * * *
 *
 *  Globals exported from the Upwatch Big Brother import utility option definitions
 */
#define progOptions bbhimportOptions

#include <config.h>

#include <limits.h>

#include <stdio.h>

#include <stdlib.h>

#ifdef  __cplusplus
}
#endif
#endif /* AUTOOPTS_BBHIMPORT_H_GUARD */
