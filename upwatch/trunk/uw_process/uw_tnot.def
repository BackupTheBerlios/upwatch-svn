AutoGen Definitions options;
#include ../common/generic_options.def
export        = "#define progOptions uw_processOptions";
prog-name     = uw_process;
prog-title    = "Upwatch parallel probe daemon";
version       = "0.1";
homerc        = "/etc/upwatch.d/uw_process.conf";
detail        = 
'uw_process reads probe resultfiles, and stores them in the database';

// this section is for the generated specfile
spec-requires = "mysql glib2";
spec-install  = "mkdir -p $RPM_BUILD_ROOT/var/spool/upwatch/uw_process/tmp";
spec-install  = "mkdir -p $RPM_BUILD_ROOT/var/spool/upwatch/uw_process/new";
spec-files    = "%attr(0770,root,upwatch) %dir /var/spool/upwatch/uw_process/new";
spec-files    = "%attr(0770,root,upwatch) %dir /var/spool/upwatch/uw_process/tmp";
spec-files    = "%attr(0770,root,upwatch) /usr/sbin/uw_process";

// describe commandline flags
flag = {
    name      = spooldir;
    value     = S;
    arg_type  = string;
    descrip   = "maildir-type spooldirectory for result files";
    doc       =
'This parameter denotes the basedirectory for reading input files. Inside
this directory a directory `tmp` and `new` should exist. All files
will be read from `new`. You should set up some cron job that
removes any files in `tmp` that are older then 36 hours. For some more info
about maildir see http://www.qmail.org/man/man5/maildir.html.';
};

flag = {
    name      = failures;
    value     = f;
    arg_type  = string;
    descrip   = "file to store failed transactions";
    doc       =
'For some reason storing results for a particular probe may fail.
These transactions are kept in the filename given with here';
};

flag = {
    name      = copy;
    value     = c;
    arg_type  = string;
    descrip   = "file to copy all transactions to";
    doc       =
'You can copy all transactions to the specified queue, for inspecting
them later';
};

flag = {
    must-set;
    name      = dbtype;
    value     = T;        /* flag style option character */
    arg-default = mysql;
    arg_type  = string;   /* option argument indication  */
    max       = NOLIMIT;  /* occurrence limit (none)     */
    descrip   = "Database type to use (mysql or postgresql)";
    doc       =
'the name of the database. For now this only can be "mysql" but other
databases might be supported in the future';
};

flag = {
    must-set;
    name      = dbcompress;
    value     = C;        /* flag style option character */
    arg-default = 1;
    arg_type  = numeric;   /* option argument indication  */
    max       = NOLIMIT;  /* occurrence limit (none)     */
    descrip   = "Use compression on database connection";
    doc       =
'If set, this option compresses all communication with the database server';
};

flag = {
    must-set;
    name      = dbhost;
    value     = h;        /* flag style option character */
    arg_type  = string;   /* option argument indication  */
    max       = NOLIMIT;  /* occurrence limit (none)     */
    descrip   = "Database host to connect to";
    doc       = 
'This option denotes the internet hostname where the database resides. For MySQL this
means the programs connects to port 3306 on this host. This hostname should be DNS
resolvable of course, but an IP address may be specified';
};  
    
flag = {
    must-set; 
    name      = dbname;
    value     = n;        /* flag style option character */
    arg_type  = string;   /* option argument indication  */
    max       = NOLIMIT;  /* occurrence limit (none)     */
    descrip   = "Database name to connect to";
};  
    
flag = {
    must-set;
    name      = dbuser;   
    value     = u;        /* flag style option character */
    arg_type  = string;   /* option argument indication  */
    max       = NOLIMIT;  /* occurrence limit (none)     */
    descrip   = "Database user to connect as";
};

flag = {
    must-set;
    name      = dbpasswd;
    value     = p;        /* flag style option character */
    arg_type  = string;   /* option argument indication  */
    max       = NOLIMIT;  /* occurrence limit (none)     */
    descrip   = "Database password"; 
};  

flag = { 
    name      = server_table_name; 
    arg_type  = string;
    arg-default = "server";
    descrip   = "Name of the servertable in the database";
};

flag = { 
    name      = server_table_id_field; 
    arg_type  = string;
    arg-default = "id";
    descrip   = "Name of the id-field in the servertable";
};

flag = { 
    name      = server_table_color_field; 
    arg_type  = string;
    arg-default = "color";
    descrip   = "Name of the color-field in the servertable";
};

